variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C
  DOCKER_DRIVER: overlay2
  CI_REGISTRY_IMAGE: oerdnj/bind9
  ATF_VERSION: "0.21"
  LUTOK_VERSION: "0.4"
  KYUA_VERSION: "0.13"

stages:
  - prepare
  - build
  - test

.debian-jessie-amd64: &debian_jessie_amd64_image
  image: "$CI_REGISTRY_IMAGE:debian-jessie-amd64"
  tags:
    - linux
    - docker

.debian-jessie-i386: &debian_jessie_i386_image
  image: "$CI_REGISTRY_IMAGE:debian-jessie-i386"
  tags:
    - linux
    - docker

.debian-stretch-amd64: &debian_stretch_amd64_image
  image: "$CI_REGISTRY_IMAGE:debian-stretch-amd64"
  tags:
    - linux
    - docker

.debian-stretch-i386:: &debian_stretch_i386_image
  image: "$CI_REGISTRY_IMAGE:debian-stretch-i386"
  tags:
    - linux
    - docker

.debian-buster-amd64: &debian_buster_amd64_image
  image: "$CI_REGISTRY_IMAGE:debian-buster-amd64"
  tags:
    - linux
    - docker

.debian-buster-i386:: &debian_buster_i386_image
  image: "$CI_REGISTRY_IMAGE:debian-buster-i386"
  tags:
    - linux
    - docker

.debian-sid-amd64: &debian_sid_amd64_image
  variables:
    CI_REGISTRY_IMAGE_TAG: "debian-sid-amd64"
  image: "$CI_REGISTRY_IMAGE:$CI_REGISTRY_IMAGE_TAG"
  tags:
    - linux
    - docker

.debian-sid-i386: &debian_sid_i386_image
  variables:
    CI_REGISTRY_IMAGE_TAG: "debian-sid-i386"
  image: "$CI_REGISTRY_IMAGE:$CI_REGISTRY_IMAGE_TAG"
  tags:
    - linux
    - docker

.ubuntu-trusty-amd64: &ubuntu_trusty_amd64_image
  image: "$CI_REGISTRY_IMAGE:ubuntu-trusty-amd64"
  tags:
    - linux
    - docker

.ubuntu-trusty-i386: &ubuntu_trusty_i386_image
  image: "$CI_REGISTRY_IMAGE:ubuntu-trusty-i386"
  tags:
    - linux
    - docker

.ubuntu-xenial-amd64: &ubuntu_xenial_amd64_image
  image: "$CI_REGISTRY_IMAGE:ubuntu-xenial-amd64"
  tags:
    - linux
    - docker

.ubuntu-xenial-i386: &ubuntu_xenial_i386_image
  image: "$CI_REGISTRY_IMAGE:ubuntu-xenial-i386"
  tags:
    - linux
    - docker

.prepare: &prepare_job
  stage: prepare
  before_script:
    - export CI_LOCAL_DIR="$CI_PROJECT_DIR/.local/$(gcc -dumpmachine)
    - export PATH="$CI_LOCAL_DIR/bin:$PATH"
    - export LD_LIBRARY_PATH="$CI_LOCAL_DIR/lib:$LD_LIBRARY_PATH"
    - export PKG_CONFIG_PATH="$CI_LOCAL_DIR/lib/pkgconfig:$PKG_CONFIG_PATH"
  script:
    - if test ! -f "$CI_LOCAL_DIR/atf-$ATF_VERSION.stamp"; then cd /tmp && curl -sSL https://github.com/jmmv/atf/releases/download/atf-$ATF_VERSION/atf-$ATF_VERSION.tar.gz | tar -xz && cd atf-$ATF_VERSION && ./configure --prefix $CI_LOCAL_DIR && make && make install && touch "$CI_LOCAL_DIR/atf-$ATF_VERSION.stamp"; else echo "ATF $ATF_VERSION found in the cache."; fi
    - if test ! -f "$CI_LOCAL_DIR/lutok-$LUTOK_VERSION.stamp"; then cd /tmp && curl -sSL https://github.com/jmmv/lutok/releases/download/lutok-$LUTOK_VERSION/lutok-$LUTOK_VERSION.tar.gz | tar -xz && cd lutok-$LUTOK_VERSION && ./configure --prefix $CI_LOCAL_DIR && make && make install && touch "$CI_LOCAL_DIR/lutok-$LUTOK_VERSION.stamp"; else echo "LUTOK $LUTOK_VERSION found in the cache."; fi
    - if test ! -f "$CI_LOCAL_DIR/kyua-$KYUA_VERSION.stamp"; then cd /tmp && curl -sSL https://github.com/jmmv/kyua/releases/download/kyua-$KYUA_VERSION/kyua-$KYUA_VERSION.tar.gz | tar -xz && cd kyua-$KYUA_VERSION && ./configure --prefix $CI_LOCAL_DIR && make && make install && touch "$CI_LOCAL_DIR/kyua-$KYUA_VERSION.stamp"; else echo "Kyua $KYUA_VERSION found in the cache."; fi
  cache:
    paths:
      - .local/

.build: &build_job
  stage: build
  before_script:
    - export CI_LOCAL_DIR="$CI_PROJECT_DIR/.local/$(gcc -dumpmachine)
    - export PATH="$CI_LOCAL_DIR/bin:$PATH"
    - export LD_LIBRARY_PATH="$CI_LOCAL_DIR/lib:$LD_LIBRARY_PATH"
    - export PKG_CONFIG_PATH="$CI_LOCAL_DIR/lib/pkgconfig:$PKG_CONFIG_PATH"
    - ./autogen.sh
  script:
    - ./configure --with-libtool --disable-static --with-atf=$CI_LOCAL_DIR
    - make -j6 -k all V=1
  cache:
    paths:
      - .local/
    policy: pull
  artifacts:
    expire_in: '1 hour'
    untracked: true

.test: &test_job
  stage: test
  before_script:
    - export CI_LOCAL_DIR="$CI_PROJECT_DIR/.local/$(gcc -dumpmachine)
    - export PATH="$CI_LOCAL_DIR/bin:$PATH"
    - export LD_LIBRARY_PATH="$CI_LOCAL_DIR/lib:$LD_LIBRARY_PATH"
    - export PKG_CONFIG_PATH="$CI_LOCAL_DIR/lib/pkgconfig:$PKG_CONFIG_PATH"
    - bash -x bin/tests/system/ifconfig.sh up
  script:
    - make -j8 -k check V=1
  cache:
    paths:
      - .local/
    policy: pull
  artifacts:
    untracked: true
    expire_in: '1 week'
    when: on_failure

#build:debian:jessie:amd64:
#  <<: *debian_jessie_amd64_image
#  <<: *build_job
#
#build:debian:jessie:i386:
#  <<: *debian_jessie_i386_image
#  <<: *build_job
#
#build:debian:stretch:amd64:
#  <<: *debian_stretch_amd64_image
#  <<: *build_job
#
#build:debian:buster:i386:
#  <<: *debian_buster_i386_image
#  <<: *build_job
#
#build:ubuntu:trusty:amd64:
#  <<: *ubuntu_trusty_amd64_image
#  <<: *build_job
#
#build:ubuntu:xenial:i386:
#  <<: *ubuntu_xenial_i386_image
#  <<: *build_job

prepare:debian:sid:amd64:
  <<: *debian_sid_amd64_image
  <<: *prepare_job
    
prepare:debian:sid:i386:
  <<: *debian_sid_i386_image
  <<: *prepare_job

build:debian:sid:amd64:
  <<: *debian_sid_amd64_image
  <<: *build_job
    
build:debian:sid:i386:
  <<: *debian_sid_i386_image
  <<: *build_job

test:debian:sid:amd64:
  <<: *debian_sid_amd64_image
  <<: *test_job
  dependencies:
    - build:debian:sid:amd64
    
test:debian:sid:i386:
  <<: *debian_sid_i386_image
  <<: *test_job
  dependencies:
    - build:debian:sid:i386
